[package]
name = "nodyn"
description = "Easy polymorphism with enums"
version = "0.2.2"
authors = ["Frank Laranja <laranja@riseup.net>"]
repository = "https://github.com/franklaranja/nodyn"
keywords = [
    "enum",
    "polymorphism",
    "delegation",
    "traits",
    "proc-macros",
]
categories = [
    "rust-patterns",
    "development-tools::procedural-macro-helpers",
]
readme = "README.md"
license = "MIT"
edition = "2024"
rust-version = "1.85.0"
autotests = false
exclude = [".*"]

[lib]
path = "src/lib.rs"
proc-macro = true

[[test]]
name = "tests"
path = "tests/run.rs"

[dependencies]
proc-macro2 = { version = "1.0.95", features = ["span-locations"] }
quote = "1.0.40"
syn = { version = "2.0.101", features = ["extra-traits", "full"] }

[dev-dependencies]
trybuild = { version = "1.0.110", features = ["diff"] }

[features]
default = ["try_into", "introspection", "is_as"]
try_into = []
introspection = []
is_as = []

[lints.rust]
unsafe_code = "forbid"

[lints.clippy]
pedantic =  "warn"

# nursery or restricted                                                                 as_underscore = "warn"
deref_by_slicing = "warn"
else_if_without_else = "warn"
empty_line_after_doc_comments = "warn"
equatable_if_let = "warn"
fn_to_numeric_cast_any = "warn"
format_push_string = "warn"
map_err_ignore = "warn"
missing_const_for_fn = "warn"
mixed_read_write_in_expression = "warn"
mod_module_files = "warn"
needless_pass_by_ref_mut = "warn"
needless_raw_strings = "warn"
or_fun_call = "warn"
redundant_type_annotations = "warn"
rest_pat_in_fully_bound_structs = "warn"
string_lit_chars_any = "warn"
string_slice = "warn"
string_to_string = "warn"
unnecessary_self_imports = "warn"
use_self = "warn"
as_underscore = "warn"
